<launch>

  <!-- 
  <group ns="/robot1">
    <node pkg="turtlebot3_teleop" type="turtlebot3_teleop_key" name="teleop" />
  </group>
  -->

  <!-- 广播以map为坐标系 的robot1的姿态信息 -->
  <node name="robot1_tf_broadcaster" pkg="mbot_follower" type="robot_tf_broadcaster.py" respawn="false" >
    <param name="robot" type="string" value="tb3_0" />
  </node>

  <!-- 广播以map为坐标系 的robot2的姿态信息 -->
  <node name="robot2_tf_broadcaster" pkg="mbot_follower" type="robot_tf_broadcaster.py" respawn="false" >
    <param name="robot" type="string" value="tb3_1" />
  </node>

  <node name="robot3_tf_broadcaster" pkg="mbot_follower" type="robot_tf_broadcaster.py" respawn="false" >
    <param name="robot" type="string" value="tb3_2" />
  </node>

  <!-- 广播以map为坐标系 的robot2的姿态信息 -->
  <node name="robot4_tf_broadcaster" pkg="mbot_follower" type="robot_tf_broadcaster.py" respawn="false" >
    <param name="robot" type="string" value="tb3_3" />
  </node>  

  <!-- 
    启动监听节点，监听robot1和robot2的坐标，得到以robot2为原点的robot1的姿态信息
    计算robot2的角速度和线速度，将/robot2/cmd_vel topic发布出去，从而让robot2跟随robot1
  -->
  <node name="robot2_pointer" pkg="mbot_follower" type="robot_tf_listener.py" respawn="false">
    <param name="robot1" type="string" value="tb3_0" />
    <param name="robot2" type="string" value="tb3_1" />
  </node>

  <node name="robot3_pointer" pkg="mbot_follower" type="robot_tf_listener.py" respawn="false">
    <param name="robot1" type="string" value="tb3_1" />
    <param name="robot2" type="string" value="tb3_2" />
  </node>

  <node name="robot4_pointer" pkg="mbot_follower" type="robot_tf_listener.py" respawn="false">
    <param name="robot1" type="string" value="tb3_2" />
    <param name="robot2" type="string" value="tb3_3" />
  </node>

</launch>
